/*
 * Copyright 2010 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.optaplanner.examples.audienciaTimeGrain.solver;
    dialect "java"

import org.optaplanner.core.api.score.buildin.bendable.BendableScoreHolder;

import org.optaplanner.examples.audienciaTimeGrain.domain.Audiencia;
import org.optaplanner.examples.audienciaTimeGrain.domain.AudienciaAssignment;
import org.optaplanner.examples.audienciaTimeGrain.domain.AudienciaSchedule;
import org.optaplanner.examples.audienciaTimeGrain.domain.Room;
import org.optaplanner.examples.audienciaTimeGrain.domain.TimeGrain;
import org.optaplanner.examples.audienciaTimeGrain.domain.Day;
import org.optaplanner.examples.audienciaTimeGrain.domain.Juez;
import org.optaplanner.examples.audienciaTimeGrain.domain.Fiscal;
import org.optaplanner.examples.audienciaTimeGrain.domain.Defensor;
import org.optaplanner.examples.audienciaTimeGrain.domain.Querellante;
import org.optaplanner.examples.audienciaTimeGrain.domain.Asesor;
import java.util.List;

global BendableScoreHolder scoreHolder;

// ############################################################################
// Hard constraints usually
// ############################################################################

rule "Room conflict"
    when
        $leftAssignment : AudienciaAssignment(pinned == false, room != null, $leftId : id, $room : room)
        $rightAssignment : AudienciaAssignment(room == $room, calculateOverlap($leftAssignment) > 0, id != $leftId)
    then
        scoreHolder.penalize(kcontext, $rightAssignment.calculateOverlap($leftAssignment));
end

rule "Don't go in overtime"
    when
        AudienciaAssignment(pinned == false, startingTimeGrain != null, $lastTimeGrainIndex : lastTimeGrainIndex)
        not TimeGrain(grainIndex == $lastTimeGrainIndex)
    then
        scoreHolder.penalize(kcontext, $lastTimeGrainIndex);
end

rule "Don't start after maximum starting time of the day"
    when
        $day : Day($lastStartingMinute : lastStartingMinute)
        AudienciaAssignment(pinned == false, startingTimeGrain != null, $startingTimeGrainIndex : startingTimeGrainIndex)
        $timegrain : TimeGrain(day == $day, grainIndex == $startingTimeGrainIndex, startingMinuteOfDay > $lastStartingMinute)
    then
        scoreHolder.penalize(kcontext, $timegrain.getStartingMinuteOfDay() - $lastStartingMinute);
end

rule "Start and end on same day"
    when
        AudienciaAssignment(pinned == false, startingTimeGrain != null, $firstTimeGrain : startingTimeGrain, $lastTimeGrainIndex : getLastTimeGrainIndex())
        $lastTimeGrain : TimeGrain(grainIndex == $lastTimeGrainIndex, $firstTimeGrain.getDay() != getDay())
    then
        scoreHolder.penalize(kcontext);
end

rule "Do not conflict Juez"
       when
           $leftAssignment : AudienciaAssignment(pinned == false, startingTimeGrain != null, $audienciaLeft : getAudiencia(), $id : id)
           $valueLeft : Juez() from $audienciaLeft.getJuezList()
           $rightAssignment : AudienciaAssignment(startingTimeGrain != null, $audienciaRight : getAudiencia(), id != $id)
           Juez(idJuez == $valueLeft.idJuez) from $audienciaRight.getJuezList()
           $overlap : Number(intValue() > 0) from $rightAssignment.calculateOverlap($leftAssignment)
       then
           scoreHolder.penalize(kcontext, $overlap.intValue());
end

rule "Do not conflict Defensor"
    when
       $leftAssignment : AudienciaAssignment(pinned == false, startingTimeGrain != null, $audienciaLeft : getAudiencia(), $id : id)
       $valueLeft : Defensor() from $audienciaLeft.getDefensorList()
       $rightAssignment : AudienciaAssignment(startingTimeGrain != null, $audienciaRight : getAudiencia(), id != $id)
       Defensor(idDefensor == $valueLeft.idDefensor) from $audienciaRight.getDefensorList()
       $overlap : Number(intValue() > 0) from $rightAssignment.calculateOverlap($leftAssignment)
    then
       scoreHolder.penalize(kcontext, $overlap.intValue());
end

rule "Do not conflict Fiscal"
    when
       $leftAssignment : AudienciaAssignment(pinned == false, startingTimeGrain != null, $audienciaLeft : getAudiencia(), $id : id)
       $valueLeft : Fiscal() from $audienciaLeft.getFiscalList()
       $rightAssignment : AudienciaAssignment(startingTimeGrain != null, $audienciaRight : getAudiencia(), id != $id)
       Fiscal(idFiscal == $valueLeft.idFiscal) from $audienciaRight.getFiscalList()
       $overlap : Number(intValue() > 0) from $rightAssignment.calculateOverlap($leftAssignment)
    then
       scoreHolder.penalize(kcontext, $overlap.intValue());
end

rule "Do not conflict Querellante"
    when
        $leftAssignment : AudienciaAssignment(pinned == false, startingTimeGrain != null, $audienciaLeft : getAudiencia(), $id : id)
        $valueLeft : Querellante() from $audienciaLeft.getQuerellanteList()
        $rightAssignment : AudienciaAssignment(startingTimeGrain != null, $audienciaRight : getAudiencia(), id != $id)
        Querellante(idQuerellante == $valueLeft.idQuerellante) from $audienciaRight.getQuerellanteList()
        $overlap : Number(intValue() > 0) from $rightAssignment.calculateOverlap($leftAssignment)
    then
        scoreHolder.penalize(kcontext, $overlap.intValue());
end

rule "Do not conflict Asesor"
    when
            $leftAssignment : AudienciaAssignment(pinned == false, startingTimeGrain != null, $audienciaLeft : getAudiencia(), $id : id)
            $valueLeft : Asesor() from $audienciaLeft.getAsesorList()
            $rightAssignment : AudienciaAssignment(startingTimeGrain != null, $audienciaRight : getAudiencia(), id != $id)
            Asesor(idAsesor == $valueLeft.idAsesor) from $audienciaRight.getAsesorList()
            $overlap : Number(intValue() > 0) from $rightAssignment.calculateOverlap($leftAssignment)
        then
            scoreHolder.penalize(kcontext, $overlap.intValue());
end

rule "Do not use room in prohibited time"
    when
        $timeGrain : TimeGrain(grainIndex != null)
        AudienciaAssignment(pinned == false, room!= null, startingTimeGrain != null, timeGrainRoomRestriction($timeGrain) == true)
    then
        scoreHolder.penalize(kcontext);
end

rule "Do not conflict Juez with TimeGrain"
    when
        $audienciaAssignment : AudienciaAssignment(pinned == false, startingTimeGrain != null, timeGrainJuezRestriction() > 0)
    then
        scoreHolder.penalize(kcontext, $audienciaAssignment.timeGrainJuezRestriction());
end

rule "Respect Minimum Starting Time"
    when
        $left : AudienciaAssignment(pinned == false, startingTimeGrain != null, isMinimumStartingTime() > 0)
    then
        scoreHolder.penalize(kcontext, $left.isMinimumStartingTime());
end

rule "Respect Maximum Starting Time"
    when
        $left : AudienciaAssignment(pinned == false, startingTimeGrain != null, isMaximumStartingTime() > 0)
    then
        scoreHolder.penalize(kcontext, $left.isMinimumStartingTime());
end

rule "Appeals in the afternoon"
    when
        $left : AudienciaAssignment(pinned == false, startingTimeGrain != null, audiencia.aLaTarde, $startingTimeGrainIndex : startingTimeGrainIndex)
        TimeGrain(grainIndex == $startingTimeGrainIndex, $startingMinute : getStartingMinuteOfDay() < 780)
    then
        scoreHolder.penalize(kcontext, 780 - $startingMinute);
end

rule "Time for External Defensor"
    when
        $left: AudienciaAssignment(startingTimeGrain != null, $id : id, audiencia.externa, $day : startingTimeGrain.day.idDay)
        $defensorLeft : Defensor() from $left.audiencia.getDefensorList()
        $right: AudienciaAssignment(pinned == false, startingTimeGrain != null, id != $id, audiencia.externa == false, startingTimeGrain.day.idDay == $day)
        $defensorRight : Defensor(idDefensor == $defensorLeft.idDefensor) from $right.audiencia.getDefensorList()
        $overlap : Number(intValue() > 0) from $right.calculateExternal($left)
    then
        scoreHolder.penalize(kcontext, (int)$overlap);
end

rule "Rooms in Boulogne"
    when
        AudienciaAssignment(pinned == false, audiencia.boulogne, room != null, !room.boulogne)
    then
     scoreHolder.penalize(kcontext);
end

rule "Rooms in Alma Fuerte"
    when
        AudienciaAssignment(pinned == false, audiencia.almaFuerte, room != null, !room.almaFuerte)
    then
     scoreHolder.penalize(kcontext);
end

rule "Rooms not in Boulogne or Alma Fuerte"
    when
        AudienciaAssignment(pinned == false, !audiencia.boulogne, room != null, room.boulogne) or AudienciaAssignment(pinned == false, !audiencia.almaFuerte, room != null, room.almaFuerte)
    then
     scoreHolder.penalize(kcontext);
end

// ############################################################################
// Soft constraints
// ############################################################################

rule "Do all meetings as soon as possible"
    when
        AudienciaAssignment(pinned == false, startingTimeGrain != null, $lastTimeGrainIndex : lastTimeGrainIndex)
    then
        scoreHolder.penalize(kcontext, $lastTimeGrainIndex);
end

rule "Prioritize Detainees"
    when
        AudienciaAssignment(pinned == false, $timeGrain : startingTimeGrain != null, audiencia.detenido)
    then
        scoreHolder.penalize(kcontext, (int)$timeGrain.getDay().getIdDay());
end

rule "One TimeGrain break between two consecutive meetings"
    when
        $left : AudienciaAssignment(pinned == false, startingTimeGrain != null,  $leftEnd : getLastTimeGrainIndex(), $leftFirstTimeGrain : startingTimeGrain, $room : room)
        AudienciaAssignment(startingTimeGrain != null, $leftEnd == startingTimeGrain.getGrainIndex() - 1, $rightFirstTimeGrainIndex : startingTimeGrain.grainIndex, $rightFirstTimeGrain : startingTimeGrain, room == $room) or AudienciaAssignment(startingTimeGrain != null, $leftFirstTimeGrain.grainIndex == lastTimeGrainIndex + 1, $rightFirstTimeGrainIndex : startingTimeGrain.grainIndex, $rightFirstTimeGrain : startingTimeGrain, room == $room)
        TimeGrain(grainIndex == $rightFirstTimeGrainIndex, $leftFirstTimeGrain.day == $rightFirstTimeGrain.day)
    then
        scoreHolder.penalize(kcontext);
end

rule "One TimeGrain Juez"
    when
        $leftAssignment : AudienciaAssignment(pinned == false, startingTimeGrain != null, $leftEnd : getLastTimeGrainIndex(),$leftFirstTimeGrain : startingTimeGrain, $audienciaLeft : getAudiencia(), $id : id)
        $valueLeft : Juez() from $audienciaLeft.getJuezList()
        $rightAssignment : AudienciaAssignment(id != $id, startingTimeGrain != null, $leftFirstTimeGrain.grainIndex == getLastTimeGrainIndex() + 1, $rightFirstTimeGrainIndex : startingTimeGrain.grainIndex, $rightFirstTimeGrain : startingTimeGrain, $audienciaRight : getAudiencia()) or AudienciaAssignment(id != $id, startingTimeGrain != null, ($leftEnd == startingTimeGrain.getGrainIndex() - 1), $rightFirstTimeGrainIndex : startingTimeGrain.grainIndex, $rightFirstTimeGrain : startingTimeGrain, $audienciaRight : getAudiencia())
        Juez(idJuez == $valueLeft.idJuez) from $audienciaRight.getJuezList()
        TimeGrain(grainIndex == $rightFirstTimeGrainIndex, $leftFirstTimeGrain.day == $rightFirstTimeGrain.day)
    then
        scoreHolder.penalize(kcontext);
end

rule "One TimeGrain Defensor"
    when
        $leftAssignment : AudienciaAssignment(pinned == false, startingTimeGrain != null, $leftEnd : getLastTimeGrainIndex(), $leftStart : startingTimeGrainIndex, $leftFirstTimeGrain : startingTimeGrain, $audienciaLeft : getAudiencia(), $id : id)
        $valueLeft : Defensor() from $audienciaLeft.getDefensorList()
        $rightAssignment : AudienciaAssignment(id != $id, startingTimeGrain != null, $leftStart == getLastTimeGrainIndex() + 1, $rightFirstTimeGrainIndex : startingTimeGrain.grainIndex, $rightFirstTimeGrain : startingTimeGrain, $audienciaRight : getAudiencia()) or AudienciaAssignment(id != $id, startingTimeGrain != null, ($leftEnd == startingTimeGrain.getGrainIndex() - 1), $rightFirstTimeGrainIndex : startingTimeGrain.grainIndex, $rightFirstTimeGrain : startingTimeGrain, $audienciaRight : getAudiencia())
        Defensor(idDefensor == $valueLeft.idDefensor) from $audienciaRight.getDefensorList()
        TimeGrain(grainIndex == $rightFirstTimeGrainIndex, $leftFirstTimeGrain.day == $rightFirstTimeGrain.day)

    then
        scoreHolder.penalize(kcontext);
end

rule "One TimeGrain Fiscal"
    when
        $leftAssignment : AudienciaAssignment(pinned == false, startingTimeGrain != null, $leftEnd : getLastTimeGrainIndex(),$leftFirstTimeGrain : startingTimeGrain, $audienciaLeft : getAudiencia(), $id : id)
        $valueLeft : Fiscal() from $audienciaLeft.getFiscalList()
        $rightAssignment : AudienciaAssignment(id != $id, startingTimeGrain != null, $leftFirstTimeGrain.grainIndex == getLastTimeGrainIndex() + 1, $rightFirstTimeGrainIndex : startingTimeGrain.grainIndex, $rightFirstTimeGrain : startingTimeGrain, $audienciaRight : getAudiencia()) or AudienciaAssignment(id != $id, startingTimeGrain != null, ($leftEnd == startingTimeGrain.getGrainIndex() - 1), $rightFirstTimeGrainIndex : startingTimeGrain.grainIndex, $rightFirstTimeGrain : startingTimeGrain, $audienciaRight : getAudiencia())
        Fiscal(idFiscal == $valueLeft.idFiscal) from $audienciaRight.getFiscalList()
        TimeGrain(grainIndex == $rightFirstTimeGrainIndex, $leftFirstTimeGrain.day == $rightFirstTimeGrain.day)
    then
        scoreHolder.penalize(kcontext);
end

rule "One TimeGrain Querellante"
    when
        $leftAssignment : AudienciaAssignment(pinned == false, startingTimeGrain != null, $leftEnd : getLastTimeGrainIndex(),$leftFirstTimeGrain : startingTimeGrain, $audienciaLeft : getAudiencia(), $id : id)
        $valueLeft : Querellante() from $audienciaLeft.getQuerellanteList()
        $rightAssignment : AudienciaAssignment(id != $id, startingTimeGrain != null, $leftFirstTimeGrain.grainIndex == getLastTimeGrainIndex() + 1, $rightFirstTimeGrainIndex : startingTimeGrain.grainIndex, $rightFirstTimeGrain : startingTimeGrain, $audienciaRight : getAudiencia()) or AudienciaAssignment(id != $id, startingTimeGrain != null, ($leftEnd == startingTimeGrain.getGrainIndex() - 1), $rightFirstTimeGrainIndex : startingTimeGrain.grainIndex, $rightFirstTimeGrain : startingTimeGrain, $audienciaRight : getAudiencia())
        Querellante(idQuerellante == $valueLeft.idQuerellante) from $audienciaRight.getQuerellanteList()
        TimeGrain(grainIndex == $rightFirstTimeGrainIndex, $leftFirstTimeGrain.day == $rightFirstTimeGrain.day)
    then
        scoreHolder.penalize(kcontext);
end

rule "One TimeGrain Asesor"
    when
        $leftAssignment : AudienciaAssignment(pinned == false, startingTimeGrain != null, $leftEnd : getLastTimeGrainIndex(),$leftFirstTimeGrain : startingTimeGrain, $audienciaLeft : getAudiencia(), $id : id)
        $valueLeft : Asesor() from $audienciaLeft.getAsesorList()
        $rightAssignment : AudienciaAssignment(id != $id, startingTimeGrain != null, $leftFirstTimeGrain.grainIndex == getLastTimeGrainIndex() + 1, $rightFirstTimeGrainIndex : startingTimeGrain.grainIndex, $rightFirstTimeGrain : startingTimeGrain, $audienciaRight : getAudiencia()) or AudienciaAssignment(id != $id, startingTimeGrain != null, ($leftEnd == startingTimeGrain.getGrainIndex() - 1), $rightFirstTimeGrainIndex : startingTimeGrain.grainIndex, $rightFirstTimeGrain : startingTimeGrain, $audienciaRight : getAudiencia())
        Asesor(idAsesor == $valueLeft.idAsesor) from $audienciaRight.getAsesorList()
        TimeGrain(grainIndex == $rightFirstTimeGrainIndex, $leftFirstTimeGrain.day == $rightFirstTimeGrain.day)
    then
        scoreHolder.penalize(kcontext);
end

rule "Problematic Hearings for last - Room"
    when
        $left : AudienciaAssignment(pinned == false, startingTimeGrain != null, room != null, $room : room, audiencia.riesgosa, $startingTimeGrainIndex : startingTimeGrainIndex, $day : startingTimeGrain.day.idDay, $id : id)
        AudienciaAssignment(startingTimeGrain != null, room == $room, id != $id, startingTimeGrain.day.idDay == $day, startingTimeGrainIndex > $startingTimeGrainIndex)
    then
        scoreHolder.penalize(kcontext);
end

rule "Problematic Hearings for last - Juez"
    when
        $left : AudienciaAssignment(pinned == false, startingTimeGrain != null, room != null, audiencia.riesgosa, $startingTimeGrainIndex : startingTimeGrainIndex, $day : startingTimeGrain.day.idDay, $id : id)
        $juezLeft : Juez() from $left.getAudiencia().getJuezList()
        $right : AudienciaAssignment(startingTimeGrain != null, id != $id, startingTimeGrain.day.idDay == $day, startingTimeGrainIndex > $startingTimeGrainIndex)
        Juez(idJuez == $juezLeft.idJuez) from $right.getAudiencia().getJuezList()
    then
        scoreHolder.penalize(kcontext);
end

rule "Problematic Hearings for last - Fiscal"
    when
       $left : AudienciaAssignment(pinned == false, startingTimeGrain != null, room != null, audiencia.riesgosa, $startingTimeGrainIndex : startingTimeGrainIndex, $day : startingTimeGrain.day.idDay, $id : id)
       $fiscalLeft : Fiscal() from $left.getAudiencia().getFiscalList()
       $right : AudienciaAssignment(startingTimeGrain != null, id != $id, startingTimeGrain.day.idDay == $day, startingTimeGrainIndex > $startingTimeGrainIndex)
       Fiscal(idFiscal == $fiscalLeft.idFiscal) from $right.getAudiencia().getFiscalList()
    then
        scoreHolder.penalize(kcontext);
end

rule "Problematic Hearings for last - Asesor"
    when
       $left : AudienciaAssignment(pinned == false, startingTimeGrain != null, room != null, audiencia.riesgosa, $startingTimeGrainIndex : startingTimeGrainIndex, $day : startingTimeGrain.day.idDay, $id : id)
       $asesorLeft : Asesor() from $left.getAudiencia().getAsesorList()
       $right : AudienciaAssignment(startingTimeGrain != null, id != $id, startingTimeGrain.day.idDay == $day, startingTimeGrainIndex > $startingTimeGrainIndex)
       Asesor(idAsesor == $asesorLeft.idAsesor) from $right.getAudiencia().getAsesorList()
    then
       scoreHolder.penalize(kcontext);
end

rule "Maximum work time Juez"
    when
        Juez($idJuez : idJuez)
        Day($idDay : idDay)
        $horas : Number(intValue() > 72) from accumulate( AudienciaAssignment(pinned == false, !audiencia.externa, startingTimeGrain != null, $idDay == startingTimeGrain.day.idDay, audiencia.containsJuez($idJuez), $timeGrains : audiencia.numTimeGrains), sum($timeGrains))
    then
        scoreHolder.penalize(kcontext, (int)$horas - 72);
end

rule "Group Juez Tipo"
    when
        $left : AudienciaAssignment(pinned == false, $id : id, startingTimeGrain != null, room != null, $room : room,
                $leftday : startingTimeGrain.day, $audiencia : audiencia,
                $leftGrain : startingTimeGrain.grainIndex)
        $maxRightGrain : Number() from accumulate( AudienciaAssignment(id != $id, startingTimeGrain != null,
                room != null, room == $room, startingTimeGrain.day == $leftday, $rightGrain : startingTimeGrain.grainIndex,
                startingTimeGrain.grainIndex < $leftGrain,$rightPedido : fechaPedido), max($rightGrain))
        $right : AudienciaAssignment(room == $room, startingTimeGrain == $maxRightGrain, $rightEndingGrain : lastTimeGrainIndex, !isSameCategory($left))
    then
        scoreHolder.penalize(kcontext);
end



